{"version":3,"sources":["components/forms/Form.module.css","components/List/ListItem.module.css","layout/Navbar.module.css","pages/Pages.module.css","components/ModalMenu.module.css","layout/ActionButton.module.css","components/forms/SearchBar.module.css","components/List/List.module.css","layout/Navbar.tsx","layout/ActionButton.tsx","pages/About.tsx","context/DataProvider.tsx","components/forms/ContactForm.tsx","components/ModalMenu.tsx","components/forms/ModalContactFormWrapper.tsx","components/forms/DeleteContact.tsx","components/forms/ModalDeleteContactWrapper.tsx","components/forms/SearchBar.tsx","components/List/ListItem.tsx","components/List/ListItemLoader.tsx","components/List/List.tsx","components/List/ListWrapper.tsx","pages/Home.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","cNav","classes","cNavMenu","cNavMenuItem","cLink","cBrand","Navbar","links","className","map","index","brand","path","name","key","to","actionButton","ActionButton","action","onClick","icon","faUserPlus","page","About","apiRoot","initialState","contactFormActive","deleteFormActive","currentContactData","phone","id","search","data","isLoading","error","offset","updateSwitch","reducer","state","currentContact","newData","type","payload","Error","DataContext","createContext","DataProvider","children","useReducer","store","dispatch","contextValue","useMemo","Provider","value","header","bar","input","buttonsPanel","formButton","cancel","contactFormSchema","yup","shape","required","min","positive","integer","test","val","toString","length","ContactForm","closeFunc","submitFunc","useForm","validationSchema","register","handleSubmit","setValue","errors","clearError","useContext","onSubmit","useEffect","defaultValue","ref","minLength","message","modalMenu","modalMenuOverlay","modalMenuContent","ModalMenu","active","ModalContactFormWrapper","a","method","axios","request","baseURL","DeleteContact","e","preventDefault","delete","searchBarContainer","SearchBar","console","log","placeholder","listItem","buttonPanel","listItemWithButtons","ListItem","faEdit","faTrashAlt","listItemLoader","ListItemLoader","list","itemclasses","List","ListWrapper","get","then","response","catch","err","finally","fetchData","Home","App","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e7c09dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Form_header__2kjWs\",\"bar\":\"Form_bar__TxvD9\",\"input\":\"Form_input__15V_G\",\"buttonsPanel\":\"Form_buttonsPanel__3MTHz\",\"formButton\":\"Form_formButton__T1MkG\",\"cancel\":\"Form_cancel__1uyzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__1JP2t\",\"listItemWithButtons\":\"ListItem_listItemWithButtons__3hocd\",\"buttonPanel\":\"ListItem_buttonPanel__sUApB\",\"listItemLoader\":\"ListItem_listItemLoader__7OTrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cNav\":\"Navbar_cNav__-VaR_\",\"cLink\":\"Navbar_cLink__1W4jA\",\"cNavMenu\":\"Navbar_cNavMenu__1Fqa2\",\"cNavMenuItem\":\"Navbar_cNavMenuItem__2JCRL\",\"cBrand\":\"Navbar_cBrand__3jx2S\",\"Brand\":\"Navbar_Brand__R8qEE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Pages_page__1mS9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalMenu\":\"ModalMenu_modalMenu__AmLr0\",\"modalMenuOverlay\":\"ModalMenu_modalMenuOverlay__3ss5X\",\"modalMenuContent\":\"ModalMenu_modalMenuContent__3xIn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionButton\":\"ActionButton_actionButton__skfiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBarContainer\":\"SearchBar_searchBarContainer__2R0mq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__1Astg\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nconst { cNav, cNavMenu, cNavMenuItem, cLink, cBrand } = classes;\r\n\r\ntype NavbarLink = {\r\n  name: string;\r\n  path: string;\r\n  brand?: boolean;\r\n};\r\n\r\ninterface INavbarProps {\r\n  links: NavbarLink[];\r\n}\r\n\r\nconst Navbar: React.FC<INavbarProps> = ({ links }) => {\r\n  return (\r\n    <div className={cNav}>\r\n      <ul className={cNavMenu}>\r\n        {links &&\r\n          links.map(({ brand, path, name }, index) => (\r\n            <li className={`${cNavMenuItem} ${brand && cBrand}`} key={index}>\r\n              <Link className={cLink} to={path}>\r\n                {name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport classes from \"./ActionButton.module.css\";\r\n\r\nconst { actionButton } = classes;\r\n\r\ninterface IActionButtonProps {\r\n    action : () => void;\r\n}\r\n\r\nconst ActionButton: React.FC<IActionButtonProps> = ({action}) => {\r\n  return (\r\n  <button className={actionButton} onClick={action}>\r\n      <FontAwesomeIcon icon={faUserPlus} />\r\n  </button>\r\n  );\r\n};\r\n\r\nexport default ActionButton;","import React from \"react\";\r\nimport classes from \"./Pages.module.css\";\r\n\r\nconst { page } = classes;\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className={page}>\r\n      <h1>About</h1>\r\n      <br />\r\n      <p>\r\n        React-pg-crud was made only as a proof of concept, to compare React and\r\n        Vue in terms of maintainability, scalability and simplicity.\r\n      </p>\r\n      <p>With this project I've learned how to use Typescript with React.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useReducer, useMemo } from \"react\";\r\nimport { IDataContext, IContactForm, IContact } from \"../interfaces\";\r\n\r\nexport const apiRoot = \"https://pg-raw-api.herokuapp.com/api/contacts/\";\r\n\r\nconst initialState: IDataContext = {\r\n  contactFormActive: false,\r\n  deleteFormActive: false,\r\n  currentContactData: {\r\n    name: \"\",\r\n    phone: \"\",\r\n    id: null,\r\n  },\r\n  search: \"\",\r\n  data: null,\r\n  isLoading: true,\r\n  error: \"\",\r\n  offset: 0,\r\n  updateSwitch: false,\r\n};\r\n\r\nfunction reducer(state: IDataContext, action: { type: string; payload: any }) {\r\n  let currentContact: IContactForm;\r\n  let newData: IContact[];\r\n  switch (action.type) {\r\n    case \"DATA_FETCHED\":\r\n      return { ...state, data: action.payload };\r\n    case \"TOGGLE_LOADING\":\r\n      return { ...state, isLoading: action.payload };\r\n    case \"CLEAN_LOADING\":\r\n      return { ...state, isLoading: true, data: null}\r\n    case \"UPDATE\":\r\n      return { ...state, updateSwitch: !state.updateSwitch, search: \"\", offset:0 };\r\n    case \"SEARCH\":\r\n      return { ...state, search: action.payload, offset: 0 };\r\n    case \"OFFSET\":\r\n      return { ...state, offset: state.offset + 1 };\r\n    case \"ERROR\":\r\n      return { ...state, error: action.payload };\r\n    case \"PUSH_MORE_DATA\":\r\n      if (state.data) {\r\n        newData = [...state.data, ...action.payload];\r\n        return { ...state, data: newData };\r\n      }\r\n      return { ...state, data: action.payload };\r\n    case \"TOGGLE_EDIT_FORM\":\r\n      //find a way to remove this repetition\r\n      currentContact = action.payload\r\n        ? action.payload\r\n        : { name: \"\", phone: \"\", id: null };\r\n      return {\r\n        ...state,\r\n        contactFormActive: !state.contactFormActive,\r\n        currentContactData: currentContact,\r\n      };\r\n    case \"TOGGLE_DELETE_FORM\":\r\n      //here\r\n      currentContact = action.payload\r\n        ? action.payload\r\n        : { name: \"\", phone: \"\", id: null };\r\n      return {\r\n        ...state,\r\n        currentContactData: currentContact,\r\n        deleteFormActive: !state.deleteFormActive,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst DataContext: any = createContext({});\r\n\r\nconst DataProvider: React.FC = ({ children }) => {\r\n  const [store, dispatch] = useReducer(reducer, initialState);\r\n  const contextValue = useMemo(() => {\r\n    return { store, dispatch };\r\n  }, [store, dispatch]);\r\n  return (\r\n    <DataContext.Provider value={contextValue}>{children}</DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport { DataProvider as Provider, DataContext as default };\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport DataContext from \"../../context/DataProvider\";\r\nimport { IContactForm } from \"../../interfaces\";\r\nimport classes from \"./Form.module.css\";\r\n\r\nconst { header, bar, input, buttonsPanel, formButton, cancel } = classes;\r\n\r\nconst contactFormSchema = yup.object().shape({\r\n  name: yup.string().required().min(5),\r\n  phone: yup\r\n    .number()\r\n    .required()\r\n    .positive()\r\n    .integer()\r\n    .test(\r\n      \"len\",\r\n      \"Must be exactly 5 characters\",\r\n      (val) => val.toString().length > 4\r\n    ),\r\n});\r\n\r\ninterface ContactFormProps {\r\n  closeFunc: () => void;\r\n  //closeFunc is a function needed to close the modal menu from the form, it changes the boolean value used to determine if it's closed or not\r\n  submitFunc: (contact: IContactForm) => void;\r\n}\r\n\r\nconst ContactForm: React.FC<ContactFormProps> = ({ closeFunc, submitFunc }) => {\r\n  const { register, handleSubmit, setValue, errors, clearError } = useForm({\r\n    validationSchema: contactFormSchema,\r\n  });\r\n\r\n  const {\r\n    store: {\r\n      currentContactData: { name, phone, id },\r\n    },\r\n  } = useContext(DataContext);\r\n\r\n  const onSubmit = handleSubmit(({ name, phone }) => {\r\n    //name and phone are the input values, id gets passed by the closure (its the store value)\r\n    submitFunc({ name, phone, id });\r\n    closeFunc();\r\n  });\r\n\r\n  useEffect(() => {\r\n    setValue([{ name }, { phone }]);\r\n    clearError();\r\n  }, [name, phone, setValue, clearError]);\r\n\r\n  return (\r\n    <div>\r\n      {id ? <h2 className={header}>Edit</h2> : <h2 className={header}>Add</h2>}\r\n      <hr className={bar} />\r\n      <form onSubmit={onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            defaultValue={name}\r\n            ref={register({\r\n              required: \"Name is required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Name must be at least 5 characters long\",\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.name && <p>Name is invalid</p>}\r\n        <label>\r\n          Phone\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            defaultValue={phone}\r\n            ref={register({\r\n              required: \"Phone is required\",\r\n              minLength: {\r\n                value: 5,\r\n                message: \"Phone must be at least 5 digits long\",\r\n              },\r\n            })}\r\n          />\r\n        </label>\r\n        {errors.phone && <p>Phone is invalid</p>}\r\n        <div className={buttonsPanel}>\r\n          <button onClick={closeFunc} className={`${formButton} ${cancel}`}>Cancel</button>\r\n          <input type=\"submit\" value=\"Submit\" className={formButton} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport classes from \"./ModalMenu.module.css\";\r\nimport { IModalMenuProps } from \"../interfaces\";\r\n\r\nconst {\r\n  modalMenu,\r\n  modalMenuOverlay,\r\n  modalMenuContent,\r\n} = classes;\r\n\r\nconst ModalMenu: React.FC<IModalMenuProps> = ({\r\n  closeFunc,\r\n  active,\r\n  children,\r\n}) => {\r\n  return (\r\n    <>\r\n      {active && (\r\n        <div className={modalMenu}>\r\n          <div className={modalMenuOverlay} onClick={() => closeFunc()}></div>\r\n          <div className={modalMenuContent}>{children}</div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalMenu;\r\n","import React, { useContext } from \"react\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport ModalMenu from \"../ModalMenu\";\r\nimport DataContext, { apiRoot } from \"../../context/DataProvider\";\r\nimport { IContactForm } from \"../../interfaces\";\r\nimport axios, { AxiosRequestConfig } from \"axios\";\r\n\r\n\r\nconst ModalContactFormWrapper: React.FC = () => {\r\n  const {\r\n    store: { contactFormActive },\r\n    dispatch,\r\n  } = useContext(DataContext);\r\n  const onSubmit = async (data: IContactForm) => {\r\n    dispatch({ type: \"CLEAN_LOADING\" });\r\n    let method: AxiosRequestConfig[\"method\"] = data.id ? \"put\" : \"post\";\r\n    const response = await axios.request({\r\n      baseURL: apiRoot,\r\n      method,\r\n      data,\r\n    });\r\n    if (response) {\r\n      dispatch({ type: \"UPDATE\" });\r\n    }\r\n  };\r\n  return (\r\n    <ModalMenu\r\n      active={contactFormActive}\r\n      closeFunc={() => dispatch({ type: \"TOGGLE_EDIT_FORM\" })}\r\n    >\r\n      <ContactForm\r\n        closeFunc={() => dispatch({ type: \"TOGGLE_EDIT_FORM\" })}\r\n        submitFunc={onSubmit}\r\n      />\r\n    </ModalMenu>\r\n  );\r\n};\r\n\r\nexport default ModalContactFormWrapper;\r\n","import React, { useContext } from \"react\";\r\nimport DataContext from \"../../context/DataProvider\";\r\nimport classes from \"./Form.module.css\";\r\n\r\nconst { header, buttonsPanel, formButton, cancel, bar } = classes;\r\n\r\ninterface DeleteFormProps {\r\n  closeFunc: () => void;\r\n  //closeFunc is a function needed to close the modal menu from the form, it changes the boolean value used to determine if it's closed or not\r\n  submitFunc: (id: number) => void;\r\n}\r\n\r\nconst DeleteContact: React.FC<DeleteFormProps> = ({\r\n  closeFunc,\r\n  submitFunc,\r\n}) => {\r\n  const {\r\n    store: {\r\n      currentContactData: { name, id },\r\n    },\r\n  } = useContext(DataContext);\r\n\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    submitFunc(id);\r\n    closeFunc();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <h2 className={header}>Are you sure you want to delete {name}?</h2>\r\n        <hr className={bar}/>\r\n        <div className={buttonsPanel}>\r\n          <button onClick={closeFunc} className={`${formButton} ${cancel}`}>\r\n            Cancel\r\n          </button>\r\n          <input type=\"submit\" value=\"Confirm\" className={formButton} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteContact;\r\n","import React, { useContext } from \"react\";\r\nimport DeleteContact from \"./DeleteContact\";\r\nimport ModalMenu from \"../ModalMenu\";\r\nimport DataContext, { apiRoot } from \"../../context/DataProvider\";\r\nimport axios from \"axios\";\r\n\r\nconst ModalContactFormWrapper: React.FC = () => {\r\n  const {\r\n    store: { deleteFormActive },\r\n    dispatch,\r\n  } = useContext(DataContext);\r\n  const onSubmit = async (id: number) => {\r\n    dispatch({ type: \"CLEAN_LOADING\" });\r\n    const response = await axios.delete(apiRoot + id);\r\n    if (response) {\r\n      dispatch({ type: \"UPDATE\" });\r\n    }\r\n  };\r\n  return (\r\n    <ModalMenu\r\n      active={deleteFormActive}\r\n      closeFunc={() => dispatch({ type: \"TOGGLE_DELETE_FORM\" })}\r\n    >\r\n      <DeleteContact\r\n        closeFunc={() => dispatch({ type: \"TOGGLE_DELETE_FORM\" })}\r\n        submitFunc={onSubmit}\r\n      />\r\n    </ModalMenu>\r\n  );\r\n};\r\n\r\nexport default ModalContactFormWrapper;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./SearchBar.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DataContext from \"../../context/DataProvider\";\r\n\r\ntype SearchFormData = {\r\n  search: string;\r\n};\r\n\r\nconst { searchBarContainer } = classes;\r\n\r\nexport default function SearchBar() {\r\n  const { register, handleSubmit } = useForm<SearchFormData>();\r\n  const { dispatch } = useContext(DataContext);\r\n  const onSubmit = handleSubmit(({ search }) => {\r\n    dispatch({ type: \"SEARCH\", payload: search });\r\n    dispatch({ type: \"TOGGLE_LOADING\", payload: true });\r\n    console.log(search);\r\n  });\r\n  return (\r\n    <form onSubmit={onSubmit} className={searchBarContainer}>\r\n      <input\r\n        name=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"search...\"\r\n        ref={register}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport DataContext from \"../../context/DataProvider\";\r\nimport classes from \"./ListItem.module.css\";\r\nimport { IListItem } from \"../../interfaces\";\r\n// get our fontawesome imports\r\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n//agregar dispatchs de nombre y telefono a boton de editar\r\n\r\nconst { listItem, buttonPanel, listItemWithButtons } = classes;\r\n\r\nconst ListItem: React.FC<IListItem> = ({ name, phone, id }) => {\r\n  const { dispatch } = useContext(DataContext);\r\n  return (\r\n    <div className={`${listItem} ${listItemWithButtons}`}>\r\n      <div>\r\n        <p>{name}</p>\r\n        <p>{phone}</p>\r\n      </div>\r\n      <div className={buttonPanel}>\r\n        <button\r\n          onClick={() =>\r\n            dispatch({ type: \"TOGGLE_EDIT_FORM\", payload: { name, phone, id } })\r\n          }\r\n        >\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n        <button\r\n        onClick={() =>\r\n          dispatch({ type: \"TOGGLE_DELETE_FORM\", payload: { name, phone, id } })\r\n        }>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./ListItem.module.css\";\r\nimport DataContext from \"../../context/DataProvider\";\r\n\r\nconst { listItemLoader, listItem } = classes;\r\n\r\nconst ListItemLoader: React.FC = () => {\r\n  const { dispatch } = useContext(DataContext);\r\n  const handleClick = () => {\r\n    dispatch({ type: \"OFFSET\" });\r\n    dispatch({ type: \"TOGGLE_LOADING\", payload: true });\r\n  };\r\n  return (\r\n    <div\r\n      className={`${listItemLoader} ${listItem}`}\r\n      onClick={() => handleClick()}\r\n    >\r\n      <h3>Load more...</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItemLoader;\r\n","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport ListItemLoader from \"./ListItemLoader\";\r\nimport classes from \"./List.module.css\";\r\nimport itemclasses from \"./ListItem.module.css\";\r\nimport { IListProps } from \"../../interfaces\";\r\n\r\nconst { list } = classes;\r\nconst { listItem } = itemclasses;\r\n\r\nconst List: React.FC<IListProps> = ({ isLoading, data, error }) => {\r\n  return (\r\n    <div className={list}>\r\n      {/*List items with loader button */}\r\n      {!error && data && (\r\n        <div>\r\n          {data.map(({name, phone, id}, index) => (\r\n            <ListItem name={name} phone={phone} id={id} key={index} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/*Loading indicator */}\r\n      {isLoading && !error && <div className={listItem}>Loading...</div>}\r\n\r\n      {/*Load more button (only works when data length is divisible by 10) */}\r\n      {!isLoading && !error && data && data.length%10===0 && data.length!==0 && <ListItemLoader />}\r\n\r\n      {/* When search returns no result */}\r\n      {!isLoading && data && data.length === 0 && (\r\n        <div className={listItem}>No contacts found :/</div>\r\n      )}\r\n\r\n      {/* When fetching returns error */}\r\n      {!isLoading && error && <div className={listItem}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"./List\";\r\nimport DataContext from \"../../context/DataProvider\";\r\nimport { apiRoot } from \"../../context/DataProvider\";\r\n\r\nconst ListWrapper = () => {\r\n  const {\r\n    store: { isLoading, data, error, search, offset, updateSwitch },\r\n    dispatch,\r\n  } = useContext(DataContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = ({\r\n      search,\r\n      offset,\r\n    }: {\r\n      search: string;\r\n      offset: number;\r\n    }) => {\r\n      //if search string is not empty, add it to uri parameters\r\n      axios\r\n        .get(\r\n          search\r\n            ? `${apiRoot}/search/${search}`\r\n            : offset\r\n            ? `${apiRoot}/offset/${offset}`\r\n            : apiRoot\r\n        )\r\n        .then((response) => {\r\n          const action = offset && !search ? \"PUSH_MORE_DATA\" : \"DATA_FETCHED\";\r\n          dispatch({ type: action, payload: response.data.data });\r\n        })\r\n        .catch((err) => {\r\n          dispatch({ type: \"ERROR\", payload: \"There has been an error\" });\r\n        })\r\n        .finally(() => dispatch({ type: \"TOGGLE_LOADING\", payload: false }));\r\n    };\r\n    fetchData({ search, offset });\r\n  }, [search, offset, dispatch, updateSwitch]);\r\n\r\n  return <List isLoading={isLoading} data={data} error={error} />;\r\n};\r\n\r\nexport default ListWrapper;\r\n","import React, { useContext } from \"react\";\r\nimport { SearchBar } from \"../components/forms\";\r\nimport classes from \"./Pages.module.css\";\r\nimport { ListWrapper as List } from \"../components\";\r\nimport { ModalContactForm, ModalDeleteContact } from \"../components/forms\";\r\nimport DataContext from \"../context/DataProvider\";\r\nimport { ActionButton } from \"../layout\";\r\n\r\nconst { page } = classes;\r\n\r\nexport default function Home() {\r\n  const { dispatch } = useContext(DataContext);\r\n  return (\r\n    <div>\r\n      <SearchBar />\r\n      <div className={page}>\r\n        <ActionButton action={() => dispatch({ type: \"TOGGLE_EDIT_FORM\" })} />\r\n        <List />\r\n      </div>\r\n      <ModalContactForm />\r\n      <ModalDeleteContact />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Navbar } from \"./layout\";\nimport { About, Home } from \"./pages\";\nimport { Provider as DataProvider } from \"./context/DataProvider\";\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <Router>\n        <DataProvider>\n          <Navbar\n            links={[\n              {\n                name: \"Home\",\n                path: \"/\",\n              },\n              {\n                name: \"About\",\n                path: \"/about\",\n              },\n              {\n                name: \"React-pg-crud\",\n                path: \"/\",\n                brand: true,\n              },\n            ]}\n          />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={About} />\n          </Switch>\n        </DataProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}